version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: ai_os_postgres
    environment:
      POSTGRES_DB: ai
      POSTGRES_USER: ai
      POSTGRES_PASSWORD: ai
    ports:
      - "5532:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai -d ai"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ai_os_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: ai_os_backend
    environment:
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_DATABASE=ai
      - PG_USER=ai
      - PG_PASSWORD=ai
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY:-}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - JIRA_URL=${JIRA_URL:-}
      - JIRA_EMAIL=${JIRA_EMAIL:-}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN:-}
      - GITLAB_TOKEN=${GITLAB_TOKEN:-}
      - GITLAB_TRIGGER_TOKEN=${GITLAB_TRIGGER_TOKEN:-}
      - SONARQUBE_TOKEN=${SONARQUBE_TOKEN:-}
      - CONFLUENCE_USER=${CONFLUENCE_USER:-}
      - CONFLUENCE_TOKEN=${CONFLUENCE_TOKEN:-}
    ports:
      - "8000:8000"
    volumes:
      - ./Uploads:/app/Uploads
      - ./Markdown:/app/Markdown
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build: .
    container_name: ai_os_worker
    command: python worker.py
    environment:
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_DATABASE=ai
      - PG_USER=ai
      - PG_PASSWORD=ai
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY:-}
    volumes:
      - ./Uploads:/app/Uploads
      - ./Markdown:/app/Markdown
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
